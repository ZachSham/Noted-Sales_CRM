name: Deploy Node Application

on:
  push:
    branches:
      - main   # or "mern-ec2-docker-ssl" if that’s your deploy branch

env:
  IMAGE_NAME: zachsham/noted-salescrm-server   # <-- replace with your Docker Hub repo
  CONTAINER_NAME: noted-server
  APP_PORT: "4000"                             # <-- adjust if your server runs on a different port

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server              # assumes Dockerfile is in /server
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    needs: build
    runs-on: [self-hosted, linux, x64, docker]   # make sure these match your runner’s labels
    steps:
      - name: Pull latest image
        run: docker pull $IMAGE_NAME:latest
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}

      - name: Stop & remove old container (if any)
        run: docker rm -f $CONTAINER_NAME || true
        env:
          CONTAINER_NAME: ${{ env.CONTAINER_NAME }}

      - name: Run new container
        run: |
          docker run -d \
            --name $CONTAINER_NAME \
            --restart unless-stopped \
            -p $APP_PORT:$APP_PORT \
            -e MONGOPASSWORD="${{ secrets.MONGOPASSWORD }}" \
            $IMAGE_NAME:latest
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          CONTAINER_NAME: ${{ env.CONTAINER_NAME }}
          APP_PORT: ${{ env.APP_PORT }}
